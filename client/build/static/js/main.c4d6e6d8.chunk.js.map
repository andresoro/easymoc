{"version":3,"sources":["components/Header.jsx","components/InpuxBox.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Title","Typography","Header","level","underline","React","Option","Select","InputBox","submit","text","refs","ace","editor","getValue","body","code","state","httpCode","content","contentType","axios","post","then","response","end","window","location","href","data","setState","endpoint","uuid","submitted","resp","console","log","catch","error","optChange","value","clear","nextProps","nextState","this","key","status","title","extra","type","onClick","subTitle","className","style","padding","showSearch","width","paddingBottom","placeholder","optionFilterProp","onSelect","event","mode","theme","enableBasicAutocompletion","height","ref","Component","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4d6e6d8.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport class Header extends React.Component {\n    render() {\n        return(\n           <Title level={2} underline>easymoc</Title>\n        );\n    }\n}","import React from 'react';\nimport { Button, Form, Select, Result } from 'antd';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\nimport axios from 'axios';\n\nconst Option = Select.Option;\n\n\nexport class InputBox extends React.Component {\n\n    constructor() {\n        super({});\n        \n        this.state = {\n            endpoint: \"\",\n            uuid: \"\",\n            submitted: false,\n            httpCode: 0,\n            resp: false\n        };\n    }\n\n    submit = () => {\n\n        let text = this.refs.ace.editor.getValue();\n        //make request\n        let body = {code: this.state.httpCode, content: this.state.contentType, body: text};\n        \n        axios.post('/gimme', body)\n            .then((response) => {\n                var end = window.location.href + \"r/\" + response.data;\n                this.setState({endpoint: end, uuid: response.data, submitted: true, resp: true})\n                console.log(response)\n            })\n            .catch((error) => {\n                this.setState({submitted: true, resp: false})\n                console.log(error)\n            })\n    }\n\n    optChange = (value) => {\n        this.setState({httpCode: value})\n    }\n\n    clear = () => {\n        this.setState({\n            endpoint: \"\",\n            submitted: false,\n            httpCode: 0,\n            contentType: \"\",\n            body: \"\",\n            resp: false,\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.body !== nextState.body)  {\n          return false\n        } else {\n          return true;\n        }\n      }\n\n    render() {\n        // if data has been sent to server, render the success/failure status\n        if (this.state.submitted) {\n            if (this.state.resp) {\n                return (\n                    <Result\n                        key=\"pass\"\n                        status=\"success\"\n                        title=\"Endpoint successfully created\"\n                        extra={[\n                        <div>\n                            <a href={this.state.endpoint}>{this.state.uuid}</a>\n                            <br/>\n                            <Button key=\"pass\" type=\"primary\" onClick={this.clear}>\n                                New Response\n                            </Button>\n                        </div>\n                        \n                        ]}\n                    >\n                    \n                    </Result>\n                );\n            } else {\n                return (\n                    <Result\n                        key=\"fail\"\n                        status=\"error\"\n                        title=\"Submission Failed\"\n                        subTitle=\"Please try again in a few moments..\"\n                        extra={[\n                        <Button key=\"fail\" type=\"primary\" onClick={this.clear}>\n                            New Response\n                        </Button>,\n                        ]}\n                    >   \n                    </Result>\n                );\n            }\n        // render the form if no submission has occurred yet or if form has been cleared    \n        } else {\n            return (\n                <Form>\n                <div className=\"select\" style={{padding: '10px 0px 10px 0px'}}>\n                    <Select\n                        showSearch\n                        style={{ width: 250, paddingBottom: 10 }}\n                        placeholder=\"Content Type\"\n                        optionFilterProp=\"children\"\n                        onSelect={(value, event) => {this.setState({contentType: value})}}\n                    >\n                    <Option value=\"application/json\">application/json</Option>\n                    <Option value=\"application/xml\">application/xml</Option>\n                    <Option value=\"application/xhtml\">application/xhtml</Option>\n                    <Option value=\"text/json\">text/json</Option>\n                    <Option value=\"text/plain\">text/plain</Option>\n                    <Option value=\"text/html\">text/html</Option>\n                    <Option value=\"text/csv\">text/csv</Option>\n                    </Select>\n                    <Select\n                        showSearch\n                        style={{ width: 250 }}\n                        placeholder=\"HTTP Status Code\"\n                        optionFilterProp=\"children\"\n                        onSelect={(value, event) => this.optChange(value)}\n                    >\n                        <Option value={100}>100: Continue</Option>\n                        <Option value={101}>101: Switching Protocols</Option>\n                        <Option value={102}>102: Processing</Option>\n                        <Option value={200}>200: OK</Option>\n                        <Option value={201}>201: Created</Option>\n                        <Option value={202}>202: Accepted</Option>\n                        <Option value={203}>203: Non-Authoritative Information</Option>\n                        <Option value={204}>204: No Content</Option>\n                        <Option value={205}>205: Reset Content</Option>\n                        <Option value={206}>206: Partial Content</Option>\n                        <Option value={207}>207: Multi-Status</Option>\n                        <Option value={208}>208: Already Reported</Option>\n                        <Option value={226}>226: IM Used</Option>\n                        <Option value={300}>300: Multiple Choices</Option>\n                        <Option value={301}>301: Moved Permanently</Option>\n                        <Option value={302}>302: Found</Option>\n                        <Option value={303}>303: See Other</Option>\n                        <Option value={304}>304: Not Modified</Option>\n                        <Option value={305}>305: Use Proxy</Option>\n                        <Option value={306}>306: Switch Proxy</Option>\n                        <Option value={307}>307: Temporary Redirect</Option>\n                        <Option value={308}>308: Permanent Redirect</Option>\n                        <Option value={400}>400: Bad Request</Option>\n                        <Option value={401}>401: Unauthorized</Option>\n                        <Option value={402}>402: Payment Required</Option>\n                        <Option value={403}>403: Forbidden</Option>\n                        <Option value={404}>404: Not Found</Option>\n                        <Option value={405}>405: Method Not Allowed</Option>\n                        <Option value={406}>406: Not Acceptable</Option>\n                        <Option value={407}>407: Proxy Authentication Required</Option>\n                        <Option value={408}>408: Request Timeout</Option>\n                        <Option value={409}>409: Conflict</Option>\n                        <Option value={410}>410: Gone</Option>\n                        <Option value={411}>411: Length Required</Option>\n                        <Option value={412}>412: Precondition Failed</Option>\n                        <Option value={413}>413: Request Entity Too Large</Option>\n                        <Option value={414}>414: Request-URI Too Long</Option>\n                        <Option value={415}>415: Unsupported Media Type</Option>\n                        <Option value={416}>416: Requested Range Not Satisfiable</Option>\n                        <Option value={417}>417: Expectation Failed</Option>\n                        <Option value={418}>418: I'm a teapot</Option>\n                        <Option value={420}>420: Enhance Your Calm</Option>\n                        <Option value={422}>422: Unprocessable Entity</Option>\n                        <Option value={423}>423: Locked</Option>\n                        <Option value={424}>424: Failed Dependency</Option>\n                        <Option value={425}>425: Unordered Collection</Option>\n                        <Option value={426}>426: Upgrade Required</Option>\n                        <Option value={428}>428: Precondition Required</Option>\n                        <Option value={429}>429: Too Many Requests</Option>\n                        <Option value={431}>431: Request Header Fields Too Large</Option>\n                        <Option value={444}>444: No Response</Option>\n                        <Option value={449}>449: Retry With</Option>\n                        <Option value={450}>450: Blocked by Windows Parental Controls</Option>\n                        <Option value={499}>499: Client Closed Request</Option>\n                        <Option value={500}>500: Internal Server Error</Option>\n                        <Option value={501}>501: Not Implemented</Option>\n                        <Option value={502}>502: Bad Gateway</Option>\n                        <Option value={503}>503: Service Unavailable</Option>\n                        <Option value={504}>504: Gateway Timeout</Option>\n                        <Option value={505}>505: HTTP Version Not Supported</Option>\n                        <Option value={506}>506: Variant Also Negotiates</Option>\n                        <Option value={507}>507: Insufficient Storage</Option>\n                        <Option value={509}>509: Bandwidth Limit Exceeded</Option>\n                        <Option value={510}>510: Not Extended</Option>\n                    </Select>\n                </div>\n                <div className=\"text\" style={{padding: '10px 0px 10px 0px'}}>\n                    <AceEditor\n                        mode=\"json\"\n                        theme=\"github\"\n                        enableBasicAutocompletion={true}\n                        height=\"250px\"\n                        ref=\"ace\"\n                    />\n                </div>\n                <div className=\"button\">\n                    <Button type=\"primary\" onClick={this.submit}>Submit</Button>\n                </div>\n                \n            </Form>\n            );\n        }\n    }\n}","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { InputBox } from './components/InpuxBox';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"col1\"></div>\n      <div className=\"col2\">\n        <div className=\"header\">\n            <Header/>\n          </div>\n          \n          <div className=\"content\">\n            <InputBox/>\n          </div>\n\n          <div className=\"footer\">\n            \n          </div>\n      </div>\n      <div className=\"col3\"></div> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}